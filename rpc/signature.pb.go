// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: rpc/signature.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's id.
type GetPubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetPubKeyRequest) Reset() {
	*x = GetPubKeyRequest{}
	mi := &file_rpc_signature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubKeyRequest) ProtoMessage() {}

func (x *GetPubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_signature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubKeyRequest.ProtoReflect.Descriptor instead.
func (*GetPubKeyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_signature_proto_rawDescGZIP(), []int{0}
}

func (x *GetPubKeyRequest) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// The response message containing the the state and the pubkey
type GetPubKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	GroupPublicKey []byte `protobuf:"bytes,2,opt,name=group_public_key,json=groupPublicKey,proto3" json:"group_public_key,omitempty"`
}

func (x *GetPubKeyReply) Reset() {
	*x = GetPubKeyReply{}
	mi := &file_rpc_signature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPubKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubKeyReply) ProtoMessage() {}

func (x *GetPubKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_signature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubKeyReply.ProtoReflect.Descriptor instead.
func (*GetPubKeyReply) Descriptor() ([]byte, []int) {
	return file_rpc_signature_proto_rawDescGZIP(), []int{1}
}

func (x *GetPubKeyReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetPubKeyReply) GetGroupPublicKey() []byte {
	if x != nil {
		return x.GroupPublicKey
	}
	return nil
}

// The request message containing the message to sign.
type GetSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []byte `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // The message to sign
}

func (x *GetSignatureRequest) Reset() {
	*x = GetSignatureRequest{}
	mi := &file_rpc_signature_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureRequest) ProtoMessage() {}

func (x *GetSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_signature_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureRequest.ProtoReflect.Descriptor instead.
func (*GetSignatureRequest) Descriptor() ([]byte, []int) {
	return file_rpc_signature_proto_rawDescGZIP(), []int{2}
}

func (x *GetSignatureRequest) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// The response message containing the signature.
type GetSignatureReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`    // Whether the signing operation was successful
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // The generated signature (64-byte signature)
}

func (x *GetSignatureReply) Reset() {
	*x = GetSignatureReply{}
	mi := &file_rpc_signature_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignatureReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureReply) ProtoMessage() {}

func (x *GetSignatureReply) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_signature_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureReply.ProtoReflect.Descriptor instead.
func (*GetSignatureReply) Descriptor() ([]byte, []int) {
	return file_rpc_signature_proto_rawDescGZIP(), []int{3}
}

func (x *GetSignatureReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetSignatureReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_rpc_signature_proto protoreflect.FileDescriptor

var file_rpc_signature_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x32, 0x8a, 0x01, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x2e, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rpc_signature_proto_rawDescOnce sync.Once
	file_rpc_signature_proto_rawDescData = file_rpc_signature_proto_rawDesc
)

func file_rpc_signature_proto_rawDescGZIP() []byte {
	file_rpc_signature_proto_rawDescOnce.Do(func() {
		file_rpc_signature_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_signature_proto_rawDescData)
	})
	return file_rpc_signature_proto_rawDescData
}

var file_rpc_signature_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_signature_proto_goTypes = []any{
	(*GetPubKeyRequest)(nil),    // 0: rpc.GetPubKeyRequest
	(*GetPubKeyReply)(nil),      // 1: rpc.GetPubKeyReply
	(*GetSignatureRequest)(nil), // 2: rpc.GetSignatureRequest
	(*GetSignatureReply)(nil),   // 3: rpc.GetSignatureReply
}
var file_rpc_signature_proto_depIdxs = []int32{
	0, // 0: rpc.Signature.GetPubKey:input_type -> rpc.GetPubKeyRequest
	2, // 1: rpc.Signature.GetSignature:input_type -> rpc.GetSignatureRequest
	1, // 2: rpc.Signature.GetPubKey:output_type -> rpc.GetPubKeyReply
	3, // 3: rpc.Signature.GetSignature:output_type -> rpc.GetSignatureReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_signature_proto_init() }
func file_rpc_signature_proto_init() {
	if File_rpc_signature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_signature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_signature_proto_goTypes,
		DependencyIndexes: file_rpc_signature_proto_depIdxs,
		MessageInfos:      file_rpc_signature_proto_msgTypes,
	}.Build()
	File_rpc_signature_proto = out.File
	file_rpc_signature_proto_rawDesc = nil
	file_rpc_signature_proto_goTypes = nil
	file_rpc_signature_proto_depIdxs = nil
}
