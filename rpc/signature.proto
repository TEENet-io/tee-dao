syntax = "proto3";

package rpc;

option go_package = "../rpc";

// The signature service definition.
service Signature {
  // Sends a get pubkey
  rpc GetPubKey (GetPubKeyRequest) returns (GetPubKeyReply) {}
  rpc GetSignature (GetSignatureRequest) returns (GetSignatureReply) {}
}

// The request message containing the user's id and user's name.
message GetPubKeyRequest {
  int32 userID = 1;
  string userName = 2;
}

// The response message containing the the state and the pubkey
message GetPubKeyReply {
  bool success = 1;
  bytes groupPublicKey = 2;
}

// The request message containing the message to sign.
message GetSignatureRequest {
  string userName = 1;  // The user's name
  bytes msg = 2;  // The message to sign (32-byte hash)
}

// The response message containing the signature.
message GetSignatureReply {
  bool success = 1;           // Whether the signing operation was successful
  bytes signature = 2;        // The generated signature (64-byte signature)
}
